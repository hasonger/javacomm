<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed Description for Cox and Kings
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.cnk.travelerp</groupId>
  <artifactId>travelerp</artifactId>
  <version>1.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Travel ERP IBE</name>
  <description>Travel ERP build POM</description>
  <url>http://cnk.com</url>
  <inceptionYear>2012</inceptionYear>

  <prerequisites>
    <maven>3.0.4</maven>
  </prerequisites>

  <properties>
    <!-- unify the encoding for all the modules -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

	<!-- todo 
    <site-repo-url></site-repo-url>
	-->
    <jdk.version>1.7</jdk.version>
    <compiler.fork>1.7</compiler.fork>

    <!-- eclipse plugin need the jaxb in this pom.xml file -->
    <jaxb-version>2.1.13</jaxb-version>

    <maven-bundle-version>2.3.7</maven-bundle-version>
    <openjpa-version>2.2.0</openjpa-version>
  </properties>

   <!--  TODO
  <mailingLists>
      example below
    <mailingList>
      <name>Development List</name>
      <subscribe>dev-subscribe@xyz.org</subscribe>
      <unsubscribe>dev-unsubscribe@xyz.org</unsubscribe>
      <post>dev@xyz.org</post>
    </mailingList>
  </mailingLists>

	 below will be opened once JIRA server created.
  <issueManagement>
    <system>jira</system>
    <url>https://issues.xyz.org/jira/browse/XYZ</url>
  </issueManagement>
  -->

  

	

  <!-- Comment out the snapshot repositories as we don't need them now -->
  
  <!--
  <repositories>
        <repository>
              <id>apache.snapshots</id>
              <url>http://repository.apache.org/snapshots/</url>
              <name>Apache Snapshot Repo</name>
             <snapshots>
                 <enabled>true</enabled>
             </snapshots>
             <releases>
                 <enabled>false</enabled>
             </releases>
         </repository>
  </repositories>
  <pluginRepositories>
         <pluginRepository>
             <id>apache.snapshots</id>
             <url>http://repository.apache.org/snapshots/</url>
             <snapshots>
                 <enabled>true</enabled>
             </snapshots>
             <releases>
                 <enabled>false</enabled>
             </releases>
         </pluginRepository>
  </pluginRepositories>
  -->
  <modules>
  
    <module>parent</module>
	<!--
  <module>common</module>
    <module>admin</module>
    <module>model</module>
	-->
    <!--<module>setup</module> -->
	<!--<module>test</module> -->
	 <!--
	<module>integration</module>
    <module>ibe</module>
	-->
	
  </modules>

  <scm>

    <connection>scm:svn:http://phpdev.coxandkings.com:8080/svn/travelerpibe/trunk/</connection>
    <developerConnection>scm:svn:http://phpdev.coxandkings.com:8080/svn/travelerpibe/trunk/</developerConnection>
    <url>  http://phpdev.coxandkings.com:8080/svn/travelerpibe/trunk/</url>
  </scm>

  <build>
    <!-- <defaultGoal>install</defaultGoal> -->
    <pluginManagement>
      <plugins>
		<!-- Assembly plug in to create speciall artifacts which may include sources, jars etc in one archive -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.3</version>
        </plugin>
		<!-- When you need to add additional sources to source path, this plug is use full.  -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.5</version>
        </plugin>
  
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.5.1</version>
          <configuration>
            <source>1.7</source>
            <target>1.7</target>
            <maxmem>256M</maxmem>
            <fork>${compiler.fork}</fork>
          </configuration>
        </plugin>

		<!-- the Release Audit Tool : e.g. ensure that whether relese note, tags, license headers are left -->
		<!--
        <plugin>
          <groupId>org.apache.rat</groupId>
          <artifactId>apache-rat-plugin</artifactId>
          <version>0.8</version>
        </plugin>
		-->
   
		<!-- The Eclipse Plugin: to generate Eclipse IDE files (*.classpath, *.wtpmodules and the .settings folder) for use with a project.
			But not recommended to use for eclipse. Recommended to import maven project int eclipse..
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>2.9</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.camel</groupId>
              <artifactId>camel-buildtools</artifactId>
              <version>${project.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <downloadSources>true</downloadSources>
            <downloadJavadocs>false</downloadJavadocs>
          </configuration>
        </plugin>
		-->
  
	<!-- not required for this project becuase we are using eclipse based project only.
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-idea-plugin</artifactId>
          <version>2.2</version>
          <configuration>
            <downloadSources>true</downloadSources>
            <downloadJavadocs>false</downloadJavadocs>
          </configuration>
        </plugin>
  -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.7</version>
          <configuration>
            <attach>true</attach>
            <source>1.7</source>
            <quiet>true</quiet>
            <bottom>Cox and Kings Travel ERP IBE</bottom>
            <detectOfflineLinks>false</detectOfflineLinks>
            <javadocVersion>1.7</javadocVersion>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>
          <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.2.1</version>
          <configuration>
            <!-- Manually push changes (including git tags) after nexus staged repo is successfully closed -->
            <pushChanges>false</pushChanges>
            <autoVersionSubmodules>true</autoVersionSubmodules>
          </configuration>
        </plugin>

		<!-- capability to package the artifact in an uber-jar, including its dependencies and to shade - i.e. rename - the packages of some of the dependencies. -->
		<plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>1.6</version>
        </plugin>
  
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.1</version>
          <configuration>
            <webResources>
              <!--
                HACK: Include legal files explicitly, otherwise they will end up in the wrong path or in another jar file in the war. NOTE: targetPath is broken
                for webResources (as documented)
              -->
              <resource>
                <directory>${project.build.outputDirectory}</directory>
                <includes>
                  <include>META-INF/LICENSE*</include>
                  <include>META-INF/NOTICE*</include>
                  <include>META-INF/DEPENDENCIES*</include>
                </includes>
              </resource>
            </webResources>
          </configuration>
        </plugin>
  
		<!-- General purpose.... -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.4</version>
          <configuration>
            <check>
              <branchRate>85</branchRate>
              <lineRate>85</lineRate>
              <haltOnFailure>false</haltOnFailure>
              <totalBranchRate>85</totalBranchRate>
              <totalLineRate>85</totalLineRate>
              <packageLineRate>85</packageLineRate>
              <packageBranchRate>85</packageBranchRate>
              <regexes>
                <regex>
                  <pattern>org.apache.camel.impl.*</pattern>
                  <branchRate>90</branchRate>
                  <lineRate>80</lineRate>
                </regex>
                <regex>
                  <pattern>org.apache.camel.builder.*</pattern>
                  <branchRate>40</branchRate>
                  <lineRate>30</lineRate>
                </regex>
              </regexes>
            </check>
          </configuration>
        </plugin>
  
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.6</version>
          <dependencies>
              <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${jaxb-version}</version>
              </dependency>
              <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-xjc</artifactId>
                <version>${jaxb-version}</version>
              </dependency>
              <dependency>
                  <groupId>ant-contrib</groupId>
                  <artifactId>ant-contrib</artifactId>
                  <version>1.0b3</version>
                  <exclusions>
                      <exclusion>
                          <groupId>ant</groupId>
                          <artifactId>ant</artifactId>
                      </exclusion>
                  </exclusions>
              </dependency>
              <dependency>
                  <groupId>org.apache.ant</groupId>
                  <artifactId>ant-trax</artifactId>
                  <version>1.8.0</version>
              </dependency>
              <dependency>
                  <groupId>org.apache.ant</groupId>
                  <artifactId>ant-nodeps</artifactId>
                  <version>1.8.1</version>
              </dependency>
              <dependency>
                <groupId>org.apache.openjpa</groupId>
                <artifactId>openjpa-persistence-jdbc</artifactId>
                <version>${openjpa-version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>ant</groupId>
                        <artifactId>ant</artifactId>
                    </exclusion>
                </exclusions>
              </dependency>
          </dependencies>
        </plugin>


        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
	      <version>2.4.3</version>
	      <configuration>
                   <encoding>UTF-8</encoding>
              </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>${maven-bundle-version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>2.6</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>2.3.1</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
		<!-- at this moment we do not need felix - OSGI R4 -->
		<!--
      <plugin>
        <groupId>org.apache.felix</groupId>
	    <artifactId>maven-bundle-plugin</artifactId>
	    <version>${maven-bundle-version}</version>
	    <extensions>true</extensions>
	    <configuration>
          <excludeDependencies>${camel.osgi.exclude.dependencies}</excludeDependencies>
	      <instructions>
	        <Bundle-Name>${project.artifactId}</Bundle-Name>
	        <Bundle-SymbolicName>${camel.osgi.symbolic.name}</Bundle-SymbolicName>
            <Bundle-Activator>${camel.osgi.activator}</Bundle-Activator>
	        <Export-Package>${camel.osgi.export}</Export-Package>
	        <Import-Package>${camel.osgi.import}</Import-Package>
	        <DynamicImport-Package>${camel.osgi.dynamic}</DynamicImport-Package>
	        <Private-Package>${camel.osgi.private.pkg}</Private-Package>
	        <Implementation-Title>Apache Camel</Implementation-Title>
	        <Implementation-Version>${project.version}</Implementation-Version>
            <Karaf-Info>Camel;${project.artifactId}=${project.version}</Karaf-Info>
            <_versionpolicy>${camel.osgi.import.default.version}</_versionpolicy>
            <_failok>${camel.osgi.failok}</_failok>
          </instructions>
	    </configuration>
        <executions>
            <execution>
                <id>versions</id>
                <phase>validate</phase>
                <goals>
                    <goal>cleanVersions</goal>
                </goals>
                <configuration>
                    <versions>
                        <camel.osgi.version.clean>${project.version}</camel.osgi.version.clean>
                    </versions>
                </configuration>
            </execution>
        </executions>
      </plugin>
	-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!--forkMode>pertest</forkMode-->
          <forkedProcessTimeoutInSeconds>300</forkedProcessTimeoutInSeconds>
          <childDelegation>false</childDelegation>
          <useFile>true</useFile>
          <failIfNoTests>false</failIfNoTests>
          <runOrder>alphabetical</runOrder>
          <systemPropertyVariables>
              <java.awt.headless>${java.awt.headless}</java.awt.headless>
          </systemPropertyVariables>
          <includes>
             <include>**/*Test.java</include>             
          </includes>
        </configuration>
      </plugin>
      <!-- <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>ianal-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>verify-legal-files</goal>
            </goals>
            <configuration>
              <strict>true</strict>
            </configuration>
          </execution>
        </executions>
      </plugin>-->
	  
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.5</version>
      </plugin>

      <!--
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
      </plugin>
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <version>2.4</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <links>
            <link>http://download.oracle.com/javase/7/docs/api/</link>
            <link>http://download.oracle.com/javaee/7/api/</link>
            <link>http://static.springsource.org/spring/docs/3.0.5.RELEASE/api/</link>
          </links>
          <stylesheetfile>${basedir}/../../etc/css/stylesheet.css</stylesheetfile>
          <linksource>true</linksource>
          <maxmemory>500m</maxmemory>
          <source>1.7</source>

          <!-- TODO we can't aggregate as it won't find the CSS file :( -->
          <!--<aggregate>true</aggregate>-->
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>2.3.1</version>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>assembly</id>
      <activation>
        <property>
          <name>!noassembly</name>
        </property>
      </activation>
	  <!--
      <modules>
        <module>apache-camel</module>
      </modules>
	  -->
    </profile>
    <profile>
      <id>setup.eclipse</id>
      <!--
        set up the eclipse workspace and generate the .classpath and .project files for modules
      -->
      <properties>
        <eclipse.workspace.dir>${basedir}/../workspace</eclipse.workspace.dir>
      </properties>
      <build>
        <defaultGoal>process-test-sources</defaultGoal>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <configuration>
                <source>${jdk.version}</source>
                <target>${jdk.version}</target>
                <maxmem>512M</maxmem>
                <fork>${compiler.fork}</fork>
              </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>			
          </plugins>
        </pluginManagement>
        <plugins>
		<!-- eclipse plug not required -->
		<!--
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <inherited>false</inherited>
            <executions>
              <execution>
                <id>setup.eclipse.workspace</id>
                <phase>process-test-sources</phase>
                <goals>
                  <goal>add-maven-repo</goal>
                </goals>
                <configuration>
                  <workspace>${eclipse.workspace.dir}</workspace>
                  <workspaceCodeStylesURL>file:etc/eclipse/CamelCodeFormatter.xml</workspaceCodeStylesURL>
                </configuration>
              </execution>
            </executions>
          </plugin>
		  -->
        </plugins>
      </build>
    </profile>


    <profile>
      <id>integration</id>
      <!--The profile for running the unit and integration test-->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId> 
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <forkedProcessTimeoutInSeconds>300</forkedProcessTimeoutInSeconds>
              <childDelegation>false</childDelegation>
              <useFile>true</useFile>
              <includes>
                <include>**/*Test.*</include>
                <include>**/*Integration.*</include>
              </includes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>deploy</id>           
      <build>
        <defaultGoal>deploy</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
<!--
    <profile>
      <id>source-jar</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
	-->
	
    <profile>
        <id>apache-release</id>
        <activation>
          <property>
            <name>apache-release</name>
          </property>
        </activation>
        <build>
          <plugins>
            <!-- waiting for release -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-assembly-plugin</artifactId>
              <executions>
                <execution>
                  <goals>
                    <goal>single</goal>
                  </goals>
                  <phase>package</phase>
                  <configuration>
                    <runOnlyAtExecutionRoot>true</runOnlyAtExecutionRoot>
                    <descriptorRefs>
                      <descriptorRef>source-release</descriptorRef>
                    </descriptorRefs>
                  </configuration>
                </execution>
              </executions>
              <dependencies>
                <dependency>
                  <!-- apache version not yet released -->
                  <!--<groupId>org.apache</groupId>-->
                  <groupId>org.apache.geronimo.genesis</groupId>
                  <artifactId>apache-source-release-assembly-descriptor</artifactId>
                  <!-- apache version not yet known -->
                  <version>2.0</version>
                </dependency>
              </dependencies>
            </plugin>
          </plugins>
        </build>
    </profile>
  </profiles>
    <distributionManagement>
  <repository>
     <id>releases</id>
     <name>Internal Releases</name>
     <url>http://10.21.12.110:8080/nexus/content/repositories/releases/</url>
  </repository>
  <snapshotRepository>
     <id>snapshots</id>
     <name>Internal Releases</name>
     <url>http://10.21.12.110:8080/nexus/content/repositories/snapshots/</url>
  </snapshotRepository>
</distributionManagement>
</project>